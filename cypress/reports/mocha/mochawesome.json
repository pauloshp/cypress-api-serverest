{
  "stats": {
    "suites": 6,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2022-06-22T16:17:23.778Z",
    "end": "2022-06-22T16:17:28.451Z",
    "duration": 4673,
    "testsRegistered": 10,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b4a0f36a-79c2-4200-8bb4-ab927360235a",
      "title": "",
      "fullFile": "cypress/integration/carrinhos/carrinhos.spec.js",
      "file": "cypress/integration/carrinhos/carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ce3f1da-39ba-4d90-b39b-258b1de199d3",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6574b7fd-5613-423f-a306-cced292d773e",
              "title": "Deve cadastrar e excluir carrinho com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "02fc01bf-ebb2-446e-9eba-acc929799a62",
                  "title": "Deve cadastrar carrinho e concluir uma compra com sucesso",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Deve cadastrar um novo carrinho com sucesso",
                      "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve cadastrar e excluir carrinho com sucesso Deve cadastrar carrinho e concluir uma compra com sucesso Deve cadastrar um novo carrinho com sucesso",
                      "timedOut": null,
                      "duration": 1540,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "_produtos.default.cadastrarProduto().then(res => {\n  cy.writeFile('./cypress/fixtures/produtoId.json', res.body);\n});\ncy.fixture('produtoId.json').then(res => {\n  let id = res._id;\n  _carrinhos.default.cadastrarCarrinho(id, 1).then(res => {\n    cy.validarSchema(res, 'post-carrinhos', 201).then(res => expect(res).to.be.eq('Contrato válido'));\n    _validaServerest.default.validarCadastroDeCarrinho(res);\n  });\n});",
                      "err": {},
                      "uuid": "b5be3001-8ab6-47fc-a72e-c737a4148d12",
                      "parentUUID": "02fc01bf-ebb2-446e-9eba-acc929799a62",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Deve excluir carrinho com sucesso e concluir a compra",
                      "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve cadastrar e excluir carrinho com sucesso Deve cadastrar carrinho e concluir uma compra com sucesso Deve excluir carrinho com sucesso e concluir a compra",
                      "timedOut": null,
                      "duration": 247,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "_carrinhos.default.excluirCarrinhoConcluirCompra().then(res => {\n  cy.validarSchema(res, 'delete-carrinhos-concluir', 200).then(res => expect(res).to.be.eq('Contrato válido'));\n  _validaServerest.default.validarExclusaoDeCarrinhoConcluirCompra(res);\n});",
                      "err": {},
                      "uuid": "d19fcbaa-8756-4168-aa68-622660e6e9fb",
                      "parentUUID": "02fc01bf-ebb2-446e-9eba-acc929799a62",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b5be3001-8ab6-47fc-a72e-c737a4148d12",
                    "d19fcbaa-8756-4168-aa68-622660e6e9fb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1787,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "3cd30161-59f1-40c5-b061-34225630a78f",
                  "title": "Deve cadastrar carrinho e cancelar uma compra com sucesso",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Deve cadastrar um novo carrinho com sucesso",
                      "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve cadastrar e excluir carrinho com sucesso Deve cadastrar carrinho e cancelar uma compra com sucesso Deve cadastrar um novo carrinho com sucesso",
                      "timedOut": null,
                      "duration": 245,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.fixture('produtoId.json').then(res => {\n  let id = res._id;\n  _carrinhos.default.cadastrarCarrinho(id, 1).then(res => {\n    cy.validarSchema(res, 'post-carrinhos', 201).then(res => expect(res).to.be.eq('Contrato válido'));\n    _validaServerest.default.validarCadastroDeCarrinho(res);\n  });\n});",
                      "err": {},
                      "uuid": "e5f97d49-f705-4618-ba4e-586abe07bd25",
                      "parentUUID": "3cd30161-59f1-40c5-b061-34225630a78f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Deve excluir carrinho com sucesso e cancelar a compra",
                      "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve cadastrar e excluir carrinho com sucesso Deve cadastrar carrinho e cancelar uma compra com sucesso Deve excluir carrinho com sucesso e cancelar a compra",
                      "timedOut": null,
                      "duration": 525,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "_carrinhos.default.excluirCarrinhoCancelarCompra().then(res => {\n  cy.validarSchema(res, 'delete-carrinhos-concluir', 200).then(res => expect(res).to.be.eq('Contrato válido'));\n  _validaServerest.default.validarExclusaoDeCarrinhoCancelarCompra(res);\n});",
                      "err": {
                        "message": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'",
                        "estack": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'\n    at Function.validarExclusaoDeCarrinhoCancelarCompra (https://serverest.dev/__cypress/tests?p=cypress/integration/carrinhos/carrinhos.spec.js:744:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress/integration/carrinhos/carrinhos.spec.js:246:36)",
                        "diff": "- 'Registro excluído com sucesso. Estoque dos produtos reabastecido'\n+ 'Registro excluído com sucesso'\n"
                      },
                      "uuid": "d1899927-a40f-4fc2-bf48-83fedaa2a0a8",
                      "parentUUID": "3cd30161-59f1-40c5-b061-34225630a78f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e5f97d49-f705-4618-ba4e-586abe07bd25"
                  ],
                  "failures": [
                    "d1899927-a40f-4fc2-bf48-83fedaa2a0a8"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 770,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "36a2a8e2-6792-4790-8672-83cd0e63f6ff",
              "title": "Não deve cadastrar carrinho duplicado e não deve excluir carrinho inexistente",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Não deve cadastrar novo carrinho caso o usuario já tenha um carrinho cadastrado",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Não deve cadastrar carrinho duplicado e não deve excluir carrinho inexistente Não deve cadastrar novo carrinho caso o usuario já tenha um carrinho cadastrado",
                  "timedOut": null,
                  "duration": 538,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture('produtoId.json').then(res => {\n  let id = res._id;\n  _carrinhos.default.cadastrarCarrinho(id, 1).then(res => {});\n  _carrinhos.default.cadastrarCarrinho(id, 1).then(res => {\n    cy.validarSchema(res, 'post-carrinhos', 400).then(res => expect(res).to.be.eq('Contrato válido'));\n    _validaServerest.default.validarCadastroDeCarrinhoDuplicado(res);\n  });\n});",
                  "err": {},
                  "uuid": "ffc612c0-0f7a-46c2-82f3-10331dbf7835",
                  "parentUUID": "36a2a8e2-6792-4790-8672-83cd0e63f6ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Não deve excluir carrinho caso não tenha carrinho cadastrado",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Não deve cadastrar carrinho duplicado e não deve excluir carrinho inexistente Não deve excluir carrinho caso não tenha carrinho cadastrado",
                  "timedOut": null,
                  "duration": 452,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_carrinhos.default.excluirCarrinhoConcluirCompra().then(res => {});\n_carrinhos.default.excluirCarrinhoConcluirCompra().then(res => {\n  cy.validarSchema(res, 'delete-carrinhos-concluir', 200).then(res => expect(res).to.be.eq('Contrato válido'));\n  _validaServerest.default.validarExclusaoDeCarrinhoConcluirCompraSemCarrinho(res);\n});",
                  "err": {},
                  "uuid": "4d6fc903-f56b-4250-b915-72879f31abf0",
                  "parentUUID": "36a2a8e2-6792-4790-8672-83cd0e63f6ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir produto",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Não deve cadastrar carrinho duplicado e não deve excluir carrinho inexistente Deve excluir produto",
                  "timedOut": null,
                  "duration": 243,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture('produtoId').then(res => {\n  let id = res._id;\n  _produtos.default.excluirProduto(id).then(res => {\n    cy.validarSchema(res, 'delete-produtos', 200).then(res => expect(res).to.be.eq('Contrato válido'));\n    _validaServerest.default.validarExclusaoDeProduto(res);\n  });\n});",
                  "err": {},
                  "uuid": "3302c130-a516-4ae8-8efe-fc55e488ac94",
                  "parentUUID": "36a2a8e2-6792-4790-8672-83cd0e63f6ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir usuário",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Não deve cadastrar carrinho duplicado e não deve excluir carrinho inexistente Deve excluir usuário",
                  "timedOut": null,
                  "duration": 264,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture('usuarioAdmId').then(res => {\n  let id = res._id;\n  _usuarios.default.excluirUsuario(id).then(res => {\n    cy.validarSchema(res, 'delete-usuarios', 200).then(res => expect(res).to.be.eq('Contrato válido'));\n    _validaServerest.default.validarExclusaoDeUsuario(res);\n  });\n});",
                  "err": {},
                  "uuid": "7cde7a17-f65a-4b4f-8979-9ace94a6440c",
                  "parentUUID": "36a2a8e2-6792-4790-8672-83cd0e63f6ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ffc612c0-0f7a-46c2-82f3-10331dbf7835",
                "4d6fc903-f56b-4250-b915-72879f31abf0",
                "3302c130-a516-4ae8-8efe-fc55e488ac94",
                "7cde7a17-f65a-4b4f-8979-9ace94a6440c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1497,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "87db16e1-f953-4055-936d-e8c1d6341891",
              "title": "Não deve cadastrar ou excluir carrinho sem autenticação de usuario",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Não deve cadastrar carrinho sem autenticação de usuario",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Não deve cadastrar ou excluir carrinho sem autenticação de usuario Não deve cadastrar carrinho sem autenticação de usuario",
                  "timedOut": null,
                  "duration": 271,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture('produtoId.json').then(res => {\n  let id = res._id;\n  _carrinhos.default.cadastrarCarrinho(id, 1).then(res => {\n    cy.validarSchema(res, 'post-carrinhos', 401).then(res => expect(res).to.be.eq('Contrato válido'));\n    _validaServerest.default.validarCadastroDeCarrinhoSemAutenticacao(res);\n  });\n});",
                  "err": {},
                  "uuid": "a22a5af5-1a11-4177-8f24-11a28c758e99",
                  "parentUUID": "87db16e1-f953-4055-936d-e8c1d6341891",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Não deve excluir carrinho sem autenticação de usuario",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Não deve cadastrar ou excluir carrinho sem autenticação de usuario Não deve excluir carrinho sem autenticação de usuario",
                  "timedOut": null,
                  "duration": 232,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_carrinhos.default.excluirCarrinhoConcluirCompra().then(res => {\n  cy.validarSchema(res, 'delete-carrinhos-concluir', 401).then(res => expect(res).to.be.eq('Contrato válido'));\n  _validaServerest.default.validarExclusaoDeCarrinhoConcluirCompraSemAutenticacao(res);\n});",
                  "err": {},
                  "uuid": "747225de-ebb4-4cc6-a714-2e9239f9bdb9",
                  "parentUUID": "87db16e1-f953-4055-936d-e8c1d6341891",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a22a5af5-1a11-4177-8f24-11a28c758e99",
                "747225de-ebb4-4cc6-a714-2e9239f9bdb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 503,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}